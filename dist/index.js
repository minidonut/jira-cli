#!/usr/bin/env node
!function(e){var s={};function o(t){if(s[t])return s[t].exports;var n=s[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=s,o.d=function(e,s,t){o.o(e,s)||Object.defineProperty(e,s,{enumerable:!0,get:t})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,s){if(1&s&&(e=o(e)),8&s)return e;if(4&s&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&s&&"string"!=typeof e)for(var n in e)o.d(t,n,function(s){return e[s]}.bind(null,n));return t},o.n=function(e){var s=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(s,"a",s),s},o.o=function(e,s){return Object.prototype.hasOwnProperty.call(e,s)},o.p="",o(o.s=0)}([function(e,s,o){"use strict";var t=this&&this.__awaiter||function(e,s,o,t){return new(o||(o=Promise))(function(n,i){function r(e){try{u(t.next(e))}catch(e){i(e)}}function a(e){try{u(t.throw(e))}catch(e){i(e)}}function u(e){e.done?n(e.value):new o(function(s){s(e.value)}).then(r,a)}u((t=t.apply(e,s||[])).next())})};Object.defineProperty(s,"__esModule",{value:!0});const n=o(1),i=o(2),r=o(3),a=o(4),u=o(5),c=o(6);console.log("JIRA cli -- v1.0.0");const{JIRA_TOKEN:l,JIRA_EMAIL:d,JIRA_PROJECT_KEY:p,JIRA_ENDPOINT:m}=process.env,f=["alan","jackie","jake","joseph","jun","karl","sean","      "],g=Math.max(...f.map(e=>e.length)),y=["todo","doing","wait","review","done"],h=[11,21,51,41,31],v={"To Do":"todo","In Progress":"doing","대기":"wait","리뷰":"review",Done:"done"},j=n.default.create({baseURL:m+"/api/2",timeout:15e3,auth:{username:d,password:l}}),w=n.default.create({baseURL:m+"/agile/1.0",timeout:15e3,auth:{username:d,password:l}}),$=()=>t(this,void 0,void 0,function*(){return(yield w.get("board/16/sprint")).data.values}),S=(e=0)=>t(this,void 0,void 0,function*(){const s=yield $(),o=r.addWeeks(new Date,e);return i.find(e=>i.propSatisfies(e=>r.isBefore(o,new Date(e)),"endDate")(e)&&i.propSatisfies(e=>r.isAfter(o,new Date(e)),"startDate")(e),s)}),b=(e=0,...s)=>t(this,void 0,void 0,function*(){const o=yield S(e),t=s.filter(e=>f.includes(e)),n=s.filter(e=>y.includes(e)),i=0===t.length?"":"&jql="+t.map(e=>"assignee="+e).join("%20OR%20"),r=yield w.get(`board/16/sprint/${o.id}/issue?maxResults=200${i}`),{issues:a}=r.data;return 0===n.length?a:a.filter(e=>n.includes(v[e.fields.status.name]))}),x=e=>t(this,void 0,void 0,function*(){return(yield j.get(`issue/SB-${e}`)).data}),_=e=>t(this,void 0,void 0,function*(){const s=e.filter(e=>"string"==typeof e);s.length<=1&&(console.error("Need more argument. see --help"),process.exit(0));const[o,...t]=s,n=t.join(" ");/^\d+$/.test(o)||(console.error(`\nUsage: jira [issue-id] [summary], where issue id must be number\n\ngiven: '${c.yellow(o)}'\n`),process.exit(0));try{const e=(yield j.get(`/issue/SB-${o}`)).data;yield j.put(`/issue/SB-${o}`,{fields:{summary:n}}),I.updateIssueSummary(e,n),process.exit(0)}catch(e){if(i.path(["response","status"],e)){const{response:s}=e;console.error(s.status,i.path(["data","errorMessages","0"],s))}else console.error(e)}}),I={issue:e=>{const{key:s,fields:{summary:o,assignee:t,status:{name:n}}}=e,i=t?t.name:"      ";console.log(s,I.name(i),I.status(v[n]),o)},updateIssueSummary:(e,s)=>{const{key:o,fields:{summary:t,assignee:n,status:{name:i}}}=e,r=n?n.name:"      ";console.log(o,I.name(r),I.status(v[i]),`${c.gray(t)} -> ${s}`)},updateIssueStatus:(e,s)=>{const{key:o,fields:{summary:t,assignee:n,status:{name:i}}}=e,r=n?n.name:"      ";console.log(o,I.name(r),I.status(v[i]),"->",I.status(s),t)},status:e=>{return c[{todo:"green",doing:"yellow",wait:"grey",review:"blue",done:"red"}[e]](e.padStart(6))},name:e=>c.white(e.padStart(g))},k=e=>(...s)=>t(this,void 0,void 0,function*(){const o=s[0];/^\d+$/.test(o)||(console.error(`\nUsage: jira ${e} <issue-id>, where issue id must be number\n\ngiven: '${c.yellow(o)}'\n`),process.exit(0));try{const s=(yield j.get(`/issue/SB-${o}`)).data;yield j.post(`/issue/SB-${o}/transitions`,{transition:{id:String(h[y.indexOf(e)])}}),I.updateIssueStatus(s,e)}catch(e){if(i.path(["response","status"],e)){const{response:s}=e;console.error(s.status,i.path(["data","errorMessages","0"],s))}else console.error(e)}});a.version("0.1.0","-v, --version").command("ls").description("list issues").action((...e)=>t(this,void 0,void 0,function*(){const s=e.splice(0,e.length-1);s.forEach(e=>{y.includes(e)||f.includes(e)||(console.log(`Given argument '${c.yellow(e)}' cannot be included in any of\n- users : ${f.join(", ")}\n- status: ${y.join(", ")}\n`),process.exit(0))});try{(yield b(0,...s)).forEach(I.issue)}catch(e){if(i.path(["response","status"],e)){const{response:s}=e;console.error(s.status,i.path(["data","errorMessages","0"],s))}else console.error(e)}})),a.command("add [user] [...rest]").description("Add a issue into current sprint").action((e,...s)=>t(this,void 0,void 0,function*(){f.includes(e)||(console.log(`First argument must be one of the users: ${f.join(", ")}`),console.log(`- given ${c.yellow(e)}`),process.exit(0));const o=s.filter(e=>"string"==typeof e);o.length<1&&(console.error("You must specify summary of a issue"),process.exit(0));const t=o.join(" ");try{const s=yield j.post("issue",{fields:{project:{id:"10016"},summary:t,issuetype:{id:"10021"},assignee:{name:e},reporter:{name:"karl"}}});console.log("Issue is successfully created");const o=i.path(["data","key"],s);if(!o)throw new Error("Issue creation failed");{const s=yield S();console.log("Set the issue's sprint..",s.id),yield w.post(`sprint/${s.id}/issue`,{issues:[o]}),I.issue({key:o,fields:{summary:t,assignee:{name:e},status:{name:"To Do"}}})}}catch(e){console.log(e)}})),a.command("rm [issue]").description("Delete a issue").action(e=>t(this,void 0,void 0,function*(){/^\d+$/.test(e)||console.error(`\nUsage: jira rm <issue-id>, where issue id must be number\n\ngiven: '${c.yellow(e)}'\n`);try{const s=yield x(e);I.issue(s),u.prompt({type:"confirm",message:`Delete SB-${e}`,name:"yes"}).then(({yes:s})=>t(this,void 0,void 0,function*(){s?yield j.delete(`issue/SB-${e}`):console.log("Bye..")}))}catch(e){console.log(e)}})),a.command("done [issue]").description("Set status of the issue 'done'").action(k("done")),a.command("wait [issue]").description("Set status of the issue 'wait'").action(k("wait")),a.command("doing [issue]").description("Set status of the issue 'doing'").action(k("doing")),a.command("review [issue]").description("Set status of the issue 'review'").action(k("review")),a.command("todo [issue]").description("Set status of the issue 'todo'").action(k("todo")),a.arguments("<id> [summary]").description("Update issue summary").action(function(...e){_(e)}),a.on("--help",function(){console.log("  [id] [summary] Update summary of issue "),console.log("\n"),console.log("Schema:"),console.log(`  - users : ${f.join(", ")}`),console.log(`  - status: ${y.join(", ")}`),console.log("\n"),console.log("Examples:"),console.log("  $ jira --help"),console.log("  $ jira ls"),console.log("  $ jira ls todo"),console.log("  $ jira ls joseph"),console.log("  $ jira ls joseph todo"),console.log("  $ jira ls karl review done"),console.log("  $ jira ls jospeh karl doing review"),console.log('  $ jira 2356 "(1.5h) ..."'),console.log("\n")}),a.parse(process.argv)},function(e,s){e.exports=require("axios")},function(e,s){e.exports=require("ramda")},function(e,s){e.exports=require("date-fns")},function(e,s){e.exports=require("commander")},function(e,s){e.exports=require("inquirer")},function(e,s){e.exports=require("chalk")}]);